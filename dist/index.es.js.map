{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/Shape.ts","../src/Transformer.ts","../src/utils/randomId.ts","../src/annotation/CreatingAnnotationState.ts","../src/annotation/DraggingAnnotationState.ts","../src/annotation/TransfromationState.ts","../src/annotation/DefaultAnnotationState.ts","../src/DeleteButton.tsx","../src/DefaultInputSection.tsx","../src/custom/DefaultDropdownSection.tsx","../src/ReactPictureAnnotation.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { IAnnotation } from \"./Annotation\";\n\nexport const defaultShapeStyle: IShapeStyle = {\n  padding: 5,\n  lineWidth: 2,\n  shadowBlur: 10,\n  fontSize: 12,\n  fontColor: \"#212529\",\n  fontBackground: \"#f8f9fa\",\n  fontFamily:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\n  shapeBackground: \"hsla(210, 16%, 93%, 0.2)\",\n  shapeStrokeStyle: \"#f8f9fa\",\n  shapeShadowStyle: \"hsla(210, 9%, 31%, 0.35)\",\n  transformerBackground: \"#5c7cfa\",\n  transformerSize: 10,\n};\n\nexport interface IShapeStyle {\n  padding: number;\n  lineWidth: number;\n  shadowBlur: number;\n  fontSize: number;\n  fontColor: string;\n  fontBackground: string;\n  fontFamily: string;\n  shapeBackground: string;\n  shapeStrokeStyle: string;\n  shapeShadowStyle: string;\n  transformerBackground: string;\n  transformerSize: number;\n}\n\nexport interface IShapeBase {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface IShapeAdjustBase {\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface IShapeData extends IShapeBase {\n  type: string;\n}\n\nexport interface IRectShapeData extends IShapeData {\n  type: \"RECT\";\n}\n\nexport interface IShape {\n  shapeStyle: IShapeStyle;\n  onDragStart: (positionX: number, positionY: number) => void;\n  onDrag: (positionX: number, positionY: number) => void;\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => IShapeBase;\n  getAnnotationData: () => IAnnotation;\n  adjustMark: (adjustBase: IShapeAdjustBase) => void;\n  setComment: (comment: string) => void;\n  equal: (data: IAnnotation) => boolean;\n\timageWidth : number;\n\timageHeight : number;\n}\n\nexport class RectShape implements IShape {\n  private readonly annotationData: IAnnotation<IShapeData>;\n\n  private readonly onChangeCallBack: () => void;\n\n  private dragStartOffset: { offsetX: number; offsetY: number };\n\n  public readonly shapeStyle: IShapeStyle;\n\n\tpublic imageHeight;\n\tpublic imageWidth;\n\n  constructor(\n    data: IAnnotation<IShapeData>,\n    onChange: () => void,\n    shapeStyle: IShapeStyle = defaultShapeStyle,\n\t\timageWidth : number,\n\t\timageHeight : number\n  ) {\n    this.annotationData = data;\n    this.onChangeCallBack = onChange;\n    this.shapeStyle = shapeStyle;\n\t\tthis.imageWidth = imageWidth;\n\t\tthis.imageHeight = imageHeight;\n  }\n\n  public onDragStart = (positionX: number, positionY: number) => {\n    const { x, y } = this.annotationData.mark;\n    this.dragStartOffset = {\n      offsetX: positionX - x,\n      offsetY: positionY - y,\n    };\n  };\n\n  public onDrag = (positionX: number, positionY: number) => {\n    // this.annotationData.mark.x = positionX - this.dragStartOffset.offsetX;\n    // this.annotationData.mark.y = positionY - this.dragStartOffset.offsetY;\n\n\t\tconst {\n      mark: { width, height },\n    } = this.annotationData;\n\n\t\tlet markX = positionX - this.dragStartOffset.offsetX;\n\t\tlet markY = positionY - this.dragStartOffset.offsetY;\n\n\t\t// console.log(positionX + \" \" + positionY + \" \" + this.annotationData.mark.x + \" \" + this.annotationData.mark.y + \" \" + this.annotationData.mark.width + \" \" + this.annotationData.mark.height + \" \");\n\t\t\n\t\tif(markX >= 0 && markX + width <= this.imageWidth && markY >= 0 && markY + height <= this.imageHeight){\n\t\t\tthis.annotationData.mark.x = positionX - this.dragStartOffset.offsetX;\n\t\t\tthis.annotationData.mark.y = positionY - this.dragStartOffset.offsetY;\n\t\t\tthis.onChangeCallBack();\n\t\t}\n\n\t\t\n  };\n\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const {\n      mark: { x, y, width, height },\n    } = this.annotationData;\n\n    return (\n      ((positionX > x && positionX < x + width) ||\n        (positionX < x && positionX > x + width)) &&\n      ((positionY > y && positionY < y + height) ||\n        (positionY < y && positionY > y + height))\n    );\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => {\n    const { x, y, width, height } = calculateTruePosition(\n      this.annotationData.mark\n    );\n    canvas2D.save();\n\n    const {\n      padding,\n      lineWidth,\n      shadowBlur,\n      fontSize,\n      fontColor,\n      fontBackground,\n      fontFamily,\n      shapeBackground,\n      shapeStrokeStyle,\n      shapeShadowStyle,\n    } = this.shapeStyle;\n\n    canvas2D.shadowBlur = shadowBlur;\n    canvas2D.shadowColor = shapeShadowStyle;\n    canvas2D.strokeStyle = shapeStrokeStyle;\n    canvas2D.lineWidth = lineWidth;\n    canvas2D.strokeRect(x, y, width, height);\n    canvas2D.restore();\n    if (selected) {\n      canvas2D.fillStyle = shapeBackground;\n      canvas2D.fillRect(x, y, width, height);\n    } else {\n      const { comment } = this.annotationData;\n      if (comment) {\n        canvas2D.font = `${fontSize}px ${fontFamily}`;\n        const metrics = canvas2D.measureText(comment);\n        canvas2D.save();\n        canvas2D.fillStyle = fontBackground;\n        canvas2D.fillRect(\n          x,\n          y,\n          metrics.width + padding * 2,\n          fontSize + padding * 2\n        );\n        canvas2D.textBaseline = \"top\";\n        canvas2D.fillStyle = fontColor;\n        canvas2D.fillText(comment, x + padding, y + padding);\n      }\n    }\n    canvas2D.restore();\n\n    return { x, y, width, height };\n  };\n\n  public adjustMark = ({\n    x = this.annotationData.mark.x,\n    y = this.annotationData.mark.y,\n    width = this.annotationData.mark.width,\n    height = this.annotationData.mark.height,\n  }: {\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n  }) => {\n    this.annotationData.mark.x = x;\n    this.annotationData.mark.y = y;\n    this.annotationData.mark.width = width;\n    this.annotationData.mark.height = height;\n    this.onChangeCallBack();\n  };\n\n  public getAnnotationData = () => {\n    return this.annotationData;\n  };\n\n  public setComment = (comment: string) => {\n    this.annotationData.comment = comment;\n  };\n\n  public equal = (data: IAnnotation) => {\n    return (\n      data.id === this.annotationData.id &&\n      data.comment === this.annotationData.comment &&\n      data.mark.x === this.annotationData.mark.x &&\n      data.mark.y === this.annotationData.mark.y &&\n      data.mark.width === this.annotationData.mark.width &&\n      data.mark.height === this.annotationData.mark.height\n    );\n  };\n}\n","import { IShape, IShapeBase } from \"Shape\";\n\nexport interface ITransformer {\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  startTransformation: (positionX: number, positionY: number) => void;\n  onTransformation: (positionX: number, positionY: number) => void;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    scale: number\n  ) => void;\n}\n\nexport default class Transformer implements ITransformer {\n  private readonly shape: IShape;\n  private currentNodeCenterIndex: number;\n  private scale: number;\n\n  private get nodeWidth() {\n    return this.shape.shapeStyle.transformerSize / this.scale;\n  }\n\n  constructor(shape: IShape, scale: number) {\n    this.shape = shape;\n    this.scale = scale;\n  }\n\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const currentCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n    return currentCenterIndex >= 0;\n  };\n\n  public startTransformation = (positionX: number, positionY: number) => {\n    this.currentNodeCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n  };\n\n  public onTransformation = (positionX: number, positionY: number) => {\n    const currentCentersTable = this.getAllCentersTable();\n    currentCentersTable[this.currentNodeCenterIndex].adjust(\n      positionX,\n      positionY\n    );\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    scale: number\n  ) => {\n    this.scale = scale;\n\n    const allCentersTable = this.getAllCentersTable();\n    canvas2D.save();\n    canvas2D.fillStyle = this.shape.shapeStyle.transformerBackground;\n\n    for (const item of allCentersTable) {\n      const { x, y, width, height } = calculateTruePosition({\n        x: item.x - this.nodeWidth / 2,\n        y: item.y - this.nodeWidth / 2,\n        width: this.nodeWidth,\n        height: this.nodeWidth,\n      });\n      canvas2D.fillRect(x, y, width, height);\n    }\n\n    canvas2D.restore();\n  };\n\n  private getCenterIndexByCursor = (positionX: number, positionY: number) => {\n    const allCentersTable = this.getAllCentersTable();\n    return allCentersTable.findIndex((item) =>\n      this.checkEachRectBoundary(item.x, item.y, positionX, positionY)\n    );\n  };\n\n  private checkEachRectBoundary = (\n    rectCenterX: number,\n    rectCenterY: number,\n    positionX: number,\n    positionY: number\n  ) => {\n    return (\n      Math.abs(positionX - rectCenterX) <= this.nodeWidth / 2 &&\n      Math.abs(positionY - rectCenterY) <= this.nodeWidth / 2\n    );\n  };\n\n  private getAllCentersTable = () => {\n    const { shape } = this;\n    const { x, y, width, height } = shape.getAnnotationData().mark;\n    return [\n      {\n        x,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            y: positionY,\n            width: width + x - positionX,\n            height: height + y - positionY,\n          });\n        },\n      },\n      {\n        x: x + width / 2,\n        y,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            y: positionY,\n            height: height + y - positionY,\n          });\n        },\n      },\n      {\n        x: x + width,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x,\n            y: positionY,\n            width: positionX - x,\n            height: y + height - positionY,\n          });\n        },\n      },\n      {\n        x,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX,\n          });\n        },\n      },\n      {\n        x: x + width,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({ width: positionX - x });\n        },\n      },\n      {\n        x,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX,\n            height: positionY - y,\n          });\n        },\n      },\n      {\n        x: x + width / 2,\n        y: y + height,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            height: positionY - y,\n          });\n        },\n      },\n      {\n        x: x + width,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            width: positionX - x,\n            height: positionY - y,\n          });\n        },\n      },\n    ];\n  };\n}\n","export default (len = 6) => {\n  const chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n  const maxPos = chars.length;\n  let id = \"\";\n  for (let i = 0; i < len; i++) {\n    id += chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return id;\n};\n","import { ReactPictureAnnotation } from \"index\";\nimport { IShape } from \"Shape\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class CreatingAnnotationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    if (shapes.length > 0) {\n      const currentShape = shapes[shapes.length - 1];\n      const {\n        mark: { x, y },\n      } = currentShape.getAnnotationData();\n      currentShape.adjustMark({\n        width: positionX - x,\n        height: positionY - y,\n      });\n    }\n  };\n\n  public onMouseUp = () => {\n    const { shapes, onShapeChange, setAnnotationState } = this.context;\n    const data = shapes.pop();\n    if (\n      data &&\n      data.getAnnotationData().mark.width !== 0 &&\n      data.getAnnotationData().mark.height !== 0\n    ) {\n      shapes.push(data);\n    } else {\n      if (data && this.applyDefaultAnnotationSize(data)) {\n        shapes.push(data);\n        onShapeChange();\n      } else {\n        this.context.selectedId = null;\n        onShapeChange();\n      }\n    }\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  private applyDefaultAnnotationSize = (shape: IShape) => {\n    if (this.context.selectedId) {\n      // Don't capture clicks meant to de-select another annotation.\n      return false;\n    }\n    if (\n      !this.context.defaultAnnotationSize ||\n      this.context.defaultAnnotationSize.length !== 2\n    ) {\n      return false;\n    }\n    const [width, height] = this.context.defaultAnnotationSize;\n    shape.adjustMark({\n      width,\n      height,\n    });\n    return true;\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class DraggingAnnotationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    const currentShape = shapes[shapes.length - 1];\n    currentShape.onDrag(positionX, positionY);\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class TransformationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { currentTransformer } = this.context;\n    if (currentTransformer) {\n      currentTransformer.onTransformation(positionX, positionY);\n    }\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import ReactPictureAnnotation from \"../ReactPictureAnnotation\";\nimport { RectShape } from \"../Shape\";\nimport Transformer from \"../Transformer\";\nimport randomId from \"../utils/randomId\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport CreatingAnnotationState from \"./CreatingAnnotationState\";\nimport DraggingAnnotationState from \"./DraggingAnnotationState\";\nimport TransformationState from \"./TransfromationState\";\n\nexport class DefaultAnnotationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n\t\t// console.log(\"width : \" + this.context.props.width);\n  }\n\n  public onMouseMove = () => undefined;\n  public onMouseUp = () => undefined;\n  public onMouseLeave = () => undefined;\n\n  public onMouseDown = (positionX: number, positionY: number) => {\n    const {\n      shapes,\n      currentTransformer,\n      onShapeChange,\n      setAnnotationState: setState,\n    } = this.context;\n\n    if (\n      currentTransformer &&\n      currentTransformer.checkBoundary(positionX, positionY)\n    ) {\n      currentTransformer.startTransformation(positionX, positionY);\n      setState(new TransformationState(this.context));\n      return;\n    }\n\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      if (shapes[i].checkBoundary(positionX, positionY)) {\n        this.context.selectedId = shapes[i].getAnnotationData().id;\n        this.context.currentTransformer = new Transformer(\n          shapes[i],\n          this.context.scaleState.scale\n        );\n        const [selectedShape] = shapes.splice(i, 1);\n        shapes.push(selectedShape);\n        selectedShape.onDragStart(positionX, positionY);\n        onShapeChange();\n        setState(new DraggingAnnotationState(this.context));\n        return;\n      }\n    }\n    this.context.shapes.push(\n      new RectShape(\n        {\n          id: randomId(),\n          mark: {\n            x: positionX,\n            y: positionY,\n            width: 0,\n            height: 0,\n            type: \"RECT\",\n          },\n        },\n        onShapeChange,\n        this.context.annotationStyle,\n\t\t\t\tthis.context.props.width,\n\t\t\t\tthis.context.props.height\n      )\n    );\n\n    setState(new CreatingAnnotationState(this.context));\n  };\n}\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      className=\"rp-delete\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g data-name=\"Layer 2\">\n        <g data-name=\"trash-2\">\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\n          <path d=\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm0-11.67c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM16 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\n\nexport interface IDefaultInputSection {\n  value: string;\n  placeholder?: string;\n  onChange: (value: string) => void;\n  onDelete: () => void;\n}\n\nexport default ({\n  value,\n  onChange,\n  onDelete,\n  placeholder = \"my placeholder...\",\n}: IDefaultInputSection) => {\n  return (\n    <div className=\"rp-default-input-section\">\n      <input\n        className=\"rp-default-input-section_input\"\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n      <a className=\"rp-default-input-section_delete\" onClick={() => onDelete()}>\n        <DeleteButton />\n      </a>\n    </div>\n  );\n};\n","import React from 'react';\nimport DeleteButton from '../DeleteButton';\n\nexport default({\n\tvalue,\n\tleft,\n\ttop,\n\tonDelete,\n\ttoggle,\n\tisOpen,\n\tonInputCommentChange,\n\tdropdownOptions\n}) => {\n\treturn(\n\n\t\t<div className=\"rp-default-dropdown-section\"\n\t\t\tstyle={{\n\t\t\t\tposition : 'absolute',\n\t\t\t\tleft,\n\t\t\t\ttop\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"rp-default-dropdown-section-header\"  onClick={() => toggle()} >\n\t\t\t\t<span className={value ? 'selected' : ''}>{value ? value : 'pick something...'}</span>\n\t\t\t\t<a className=\"rp-default-dropdown-svg\" onClick={() => onDelete()}>\n\t\t\t\t\t<DeleteButton></DeleteButton>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tisOpen && (\n\t\t\t\t\t<div className=\"rp-default-dropdown-options\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdropdownOptions.map(item => {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<li onClick={() => onInputCommentChange(item)}>\n\t\t\t\t\t\t\t\t\t\t\t<a>{item}</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t)\n}\n\n","import React, { MouseEventHandler } from \"react\";\nimport { IAnnotation } from \"./Annotation\";\nimport { IAnnotationState } from \"./annotation/AnnotationState\";\nimport { DefaultAnnotationState } from \"./annotation/DefaultAnnotationState\";\nimport DefaultInputSection from \"./DefaultInputSection\";\nimport DefaultDropdownSection from './custom/DefaultDropdownSection';\n// import DeleteButton from \"./DeleteButton\";\nimport {\n  defaultShapeStyle,\n  IShape,\n  IShapeBase,\n  IShapeStyle,\n  RectShape,\n} from \"./Shape\";\nimport Transformer, { ITransformer } from \"./Transformer\";\n\ninterface IReactPictureAnnotationProps {\n  annotationData?: IAnnotation[];\n  selectedId?: string | null;\n  scrollSpeed: number;\n  marginWithInput: number;\n  onChange: (annotationData: IAnnotation[]) => void;\n  onSelect: (id: string | null) => void;\n  width: number;\n  height: number;\n  image: string;\n  annotationStyle: IShapeStyle;\n  defaultAnnotationSize?: number[];\n  inputElement: (\n    value: string,\n    onChange: (value: string) => void,\n    onDelete: () => void\n  ) => React.ReactElement;\n\tdropdownOptions : string[];\n}\n\ninterface IStageState {\n  scale: number;\n  originX: number;\n  originY: number;\n}\n\nconst defaultState: IStageState = {\n  scale: 1,\n  originX: 0,\n  originY: 0,\n};\n\nexport default class ReactPictureAnnotation extends React.Component<\n  IReactPictureAnnotationProps\n> {\n  public static defaultProps = {\n    marginWithInput: 10,\n    scrollSpeed: 0.0005,\n    annotationStyle: defaultShapeStyle,\n    inputElement: (\n      value: string,\n      onChange: (value: string) => void,\n      onDelete: () => void\n    ) => (\n      <DefaultInputSection\n        value={value}\n        onChange={onChange}\n        onDelete={onDelete}\n      />\n    ),\n  };\n\n  public state = {\n    inputPosition: {\n      left: 0,\n      top: 0,\n    },\n\t\tisOpen : false,\n    showInput: false,\n    inputComment: \"\",\n  };\n\n  set selectedId(value: string | null) {\n    const { onSelect } = this.props;\n    this.selectedIdTrueValue = value;\n    onSelect(value);\n  }\n\n  get selectedId() {\n    return this.selectedIdTrueValue;\n  }\n\n  get annotationStyle() {\n    return this.props.annotationStyle;\n  }\n\n  get defaultAnnotationSize() {\n    return this.props.defaultAnnotationSize;\n  }\n\n  public shapes: IShape[] = [];\n  public scaleState = defaultState;\n  public currentTransformer: ITransformer;\n\n  private currentAnnotationData: IAnnotation[] = [];\n  private selectedIdTrueValue: string | null;\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  private canvas2D?: CanvasRenderingContext2D | null;\n  private imageCanvasRef = React.createRef<HTMLCanvasElement>();\n  private imageCanvas2D?: CanvasRenderingContext2D | null;\n  private currentImageElement?: HTMLImageElement;\n  private currentAnnotationState: IAnnotationState = new DefaultAnnotationState(\n    this\n  );\n\n  public componentDidMount = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      this.setCanvasDPI();\n\n      this.canvas2D = currentCanvas.getContext(\"2d\");\n      this.imageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      this.onImageChange();\n    }\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public componentDidUpdate = (preProps: IReactPictureAnnotationProps) => {\n    const { width, height, image } = this.props;\n    if (preProps.width !== width || preProps.height !== height) {\n      this.setCanvasDPI();\n      this.onShapeChange();\n      this.onImageChange();\n    }\n    if (preProps.image !== image) {\n      this.cleanImage();\n      if (this.currentImageElement) {\n        this.currentImageElement.src = image;\n      } else {\n        this.onImageChange();\n      }\n    }\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public calculateMousePosition = (positionX: number, positionY: number) => {\n    const { originX, originY, scale } = this.scaleState;\n    return {\n      positionX: (positionX - originX) / scale,\n      positionY: (positionY - originY) / scale,\n    };\n  };\n\n  public calculateShapePosition = (shapeData: IShapeBase): IShapeBase => {\n    const { originX, originY, scale } = this.scaleState;\n    const { x, y, width, height } = shapeData;\n    return {\n      x: x * scale + originX,\n      y: y * scale + originY,\n      width: width * scale,\n      height: height * scale,\n    };\n  };\n\n  public render() {\n    const { width, height, inputElement } = this.props;\n    const { showInput, inputPosition, inputComment } = this.state;\n    return (\n      <div className=\"rp-stage\">\n        <canvas\n          style={{ width, height }}\n          className=\"rp-image\"\n          ref={this.imageCanvasRef}\n          width={width * 2}\n          height={height * 2}\n        />\n        <canvas\n          className=\"rp-shapes\"\n          style={{ width, height }}\n          ref={this.canvasRef}\n          width={width * 2}\n          height={height * 2}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          onMouseUp={this.onMouseUp}\n          onMouseLeave={this.onMouseLeave}\n          onWheel={this.onWheel}\n        />\n        {showInput && (\n          <div className=\"rp-selected-input\" style={inputPosition}>\n            {inputElement(\n              inputComment,\n              this.onInputCommentChange,\n              this.onDelete\n            )}\n          </div>\n        )}\n\n\t\t\t\t{\n\t\t\t\t\tshowInput && (\n\n\t\t\t\t\t\t<DefaultDropdownSection\n\t\t\n\t\t\t\t\t\t\tvalue={this.state.inputComment}\n\t\t\t\t\t\t\tonDelete = {this.onDelete}\n\t\t\t\t\t\t\tleft = {this.state.inputPosition.left}\n\t\t\t\t\t\t\ttop = {this.state.inputPosition.top}\n\t\t\t\t\t\t\ttoggle = {this.toggleList}\n\t\t\t\t\t\t\tisOpen = {this.state.isOpen}\n\t\t\t\t\t\t\tonInputCommentChange = {this.onInputCommentChange}\n\t\t\t\t\t\t\tdropdownOptions = {this.props.dropdownOptions}\n\t\t\t\t\t\t\n\t\t\t\t\t\t></DefaultDropdownSection>\n\n\t\t\t\t\t)\n\t\t\t\t}\n\n\n      </div>\n    );\n  }\n\n  public setAnnotationState = (annotationState: IAnnotationState) => {\n    this.currentAnnotationState = annotationState;\n  };\n\n  public onShapeChange = () => {\n    if (this.canvas2D && this.canvasRef.current) {\n      this.canvas2D.clearRect(\n        0,\n        0,\n        this.canvasRef.current.width,\n        this.canvasRef.current.height\n      );\n\n      let hasSelectedItem = false;\n\n      for (const item of this.shapes) {\n        const isSelected = item.getAnnotationData().id === this.selectedId;\n        const { x, y, height } = item.paint(\n          this.canvas2D,\n          this.calculateShapePosition,\n          isSelected\n        );\n\n        if (isSelected) {\n          if (!this.currentTransformer) {\n            this.currentTransformer = new Transformer(\n              item,\n              this.scaleState.scale\n            );\n          }\n\n          hasSelectedItem = true;\n\n          this.currentTransformer.paint(\n            this.canvas2D,\n            this.calculateShapePosition,\n            this.scaleState.scale\n          );\n\n          this.setState({\n            showInput: true,\n            inputPosition: {\n              left: x,\n              top: y + height + this.props.marginWithInput,\n            },\n            inputComment: item.getAnnotationData().comment || \"\",\n          });\n        }\n      }\n\n      if (!hasSelectedItem) {\n        this.setState({\n          showInput: false,\n          inputComment: \"\",\n        });\n      }\n    }\n\n    this.currentAnnotationData = this.shapes.map((item) =>\n      item.getAnnotationData()\n    );\n    const { onChange } = this.props;\n    onChange(this.currentAnnotationData);\n  };\n\n  private syncAnnotationData = () => {\n    const { annotationData } = this.props;\n    if (annotationData) {\n      const refreshShapesWithAnnotationData = () => {\n        this.selectedId = null;\n        this.shapes = annotationData.map(\n          (eachAnnotationData) =>\n            new RectShape(\n              eachAnnotationData,\n              this.onShapeChange,\n              this.annotationStyle,\n\t\t\t\t\t\t\tthis.props.width,\n\t\t\t\t\t\t\tthis.props.height\n            )\n        );\n        this.onShapeChange();\n      };\n\n      if (annotationData.length !== this.shapes.length) {\n        refreshShapesWithAnnotationData();\n      } else {\n        for (const annotationDataItem of annotationData) {\n          const targetShape = this.shapes.find(\n            (item) => item.getAnnotationData().id === annotationDataItem.id\n          );\n          if (targetShape && targetShape.equal(annotationDataItem)) {\n            continue;\n          } else {\n            refreshShapesWithAnnotationData();\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  private syncSelectedId = () => {\n    const { selectedId } = this.props;\n\n    if (selectedId && selectedId !== this.selectedId) {\n      this.selectedId = selectedId;\n      this.onShapeChange();\n    }\n  };\n\n  private onDelete = () => {\n    const deleteTarget = this.shapes.findIndex(\n      (shape) => shape.getAnnotationData().id === this.selectedId\n    );\n    if (deleteTarget >= 0) {\n      this.shapes.splice(deleteTarget, 1);\n      this.onShapeChange();\n    }\n  };\n\n\tprivate toggleList = () => {\n\t\tthis.setState({\n\t\t\tisOpen : !this.state.isOpen\n\t\t})\n\t}\n\n  private setCanvasDPI = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      const currentCanvas2D = currentCanvas.getContext(\"2d\");\n      const currentImageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      if (currentCanvas2D && currentImageCanvas2D) {\n        currentCanvas2D.scale(2, 2);\n        currentImageCanvas2D.scale(2, 2);\n      }\n    }\n  };\n\n  private onInputCommentChange = (comment: string) => {\n    const selectedShapeIndex = this.shapes.findIndex(\n      (item) => item.getAnnotationData().id === this.selectedId\n    );\n    this.shapes[selectedShapeIndex].setComment(comment);\n    this.setState({ \n\t\t\tinputComment: comment,\n\t\t\tisOpen : false \n\t\t});\n  };\n\n  private cleanImage = () => {\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      this.imageCanvas2D.clearRect(\n        0,\n        0,\n        this.imageCanvasRef.current.width,\n        this.imageCanvasRef.current.height\n      );\n    }\n  };\n\n  private onImageChange = () => {\n    this.cleanImage();\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      if (this.currentImageElement) {\n        const { originX, originY, scale } = this.scaleState;\n        this.imageCanvas2D.drawImage(\n          this.currentImageElement,\n          originX,\n          originY,\n          this.currentImageElement.width * scale,\n          this.currentImageElement.height * scale\n        );\n      } else {\n        const nextImageNode = document.createElement(\"img\");\n        nextImageNode.addEventListener(\"load\", () => {\n          this.currentImageElement = nextImageNode;\n          const { width, height } = nextImageNode;\n          const imageNodeRatio = height / width;\n          const { width: canvasWidth, height: canvasHeight } = this.props;\n          const canvasNodeRatio = canvasHeight / canvasWidth;\n          if (!isNaN(imageNodeRatio) && !isNaN(canvasNodeRatio)) {\n            if (imageNodeRatio < canvasNodeRatio) {\n              const scale = canvasWidth / width;\n              this.scaleState = {\n                originX: 0,\n                originY: (canvasHeight - scale * height) / 2,\n                scale,\n              };\n            } else {\n              const scale = canvasHeight / height;\n              this.scaleState = {\n                originX: (canvasWidth - scale * width) / 2,\n                originY: 0,\n                scale,\n              };\n            }\n          }\n          this.onImageChange();\n          this.onShapeChange();\n        });\n        nextImageNode.alt = \"\";\n        nextImageNode.src = this.props.image;\n      }\n    }\n  };\n\n  private onMouseDown: MouseEventHandler<HTMLCanvasElement> = (event) => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseDown(positionX, positionY);\n  };\n\n  private onMouseMove: MouseEventHandler<HTMLCanvasElement> = (event) => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseMove(positionX, positionY);\n  };\n\n  private onMouseUp: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseUp();\n  };\n\n  private onMouseLeave: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseLeave();\n  };\n\n  private onWheel = (event: React.WheelEvent<HTMLCanvasElement>) => {\n    // https://stackoverflow.com/a/31133823/9071503\n    const { clientHeight, scrollTop, scrollHeight } = event.currentTarget;\n    if (clientHeight + scrollTop + event.deltaY > scrollHeight) {\n      // event.preventDefault();\n      event.currentTarget.scrollTop = scrollHeight;\n    } else if (scrollTop + event.deltaY < 0) {\n      // event.preventDefault();\n      event.currentTarget.scrollTop = 0;\n    }\n\n    const { scale: preScale } = this.scaleState;\n    this.scaleState.scale += event.deltaY * this.props.scrollSpeed;\n    if (this.scaleState.scale > 10) {\n      this.scaleState.scale = 10;\n    }\n    if (this.scaleState.scale < 0.1) {\n      this.scaleState.scale = 0.1;\n    }\n\n    const { originX, originY, scale } = this.scaleState;\n    const { offsetX, offsetY } = event.nativeEvent;\n    this.scaleState.originX =\n      offsetX - ((offsetX - originX) / preScale) * scale;\n    this.scaleState.originY =\n      offsetY - ((offsetY - originY) / preScale) * scale;\n\n    this.setState({ imageScale: this.scaleState });\n\n    requestAnimationFrame(() => {\n      this.onShapeChange();\n      this.onImageChange();\n    });\n  };\n}\n"],"names":["defaultShapeStyle","padding","lineWidth","shadowBlur","fontSize","fontColor","fontBackground","fontFamily","shapeBackground","shapeStrokeStyle","shapeShadowStyle","transformerBackground","transformerSize","RectShape","data","onChange","shapeStyle","imageWidth","imageHeight","annotationData","onChangeCallBack","dragStartOffset","onDragStart","positionX","positionY","mark","x","y","offsetX","offsetY","onDrag","width","height","markX","markY","checkBoundary","paint","canvas2D","calculateTruePosition","selected","save","shadowColor","strokeStyle","strokeRect","restore","fillStyle","fillRect","comment","font","metrics","measureText","textBaseline","fillText","adjustMark","getAnnotationData","setComment","equal","id","Transformer","shape","scale","currentNodeCenterIndex","currentCenterIndex","getCenterIndexByCursor","startTransformation","onTransformation","currentCentersTable","getAllCentersTable","adjust","allCentersTable","item","nodeWidth","findIndex","checkEachRectBoundary","rectCenterX","rectCenterY","Math","abs","_","len","chars","maxPos","length","i","charAt","floor","random","CreatingAnnotationState","context","onMouseDown","undefined","onMouseMove","shapes","currentShape","onMouseUp","onShapeChange","setAnnotationState","pop","push","applyDefaultAnnotationSize","selectedId","DefaultAnnotationState","defaultAnnotationSize","onMouseLeave","DraggingAnnotationState","TransformationState","currentTransformer","setState","scaleState","splice","selectedShape","randomId","type","annotationStyle","props","value","onDelete","placeholder","e","target","left","top","toggle","isOpen","onInputCommentChange","dropdownOptions","position","map","defaultState","originX","originY","ReactPictureAnnotation","state","inputPosition","showInput","inputComment","currentAnnotationData","selectedIdTrueValue","canvasRef","React","createRef","imageCanvasRef","imageCanvas2D","currentImageElement","currentAnnotationState","componentDidMount","currentCanvas","current","currentImageCanvas","setCanvasDPI","getContext","onImageChange","syncAnnotationData","syncSelectedId","componentDidUpdate","preProps","image","cleanImage","src","calculateMousePosition","calculateShapePosition","shapeData","annotationState","clearRect","hasSelectedItem","isSelected","marginWithInput","refreshShapesWithAnnotationData","eachAnnotationData","annotationDataItem","targetShape","find","deleteTarget","toggleList","currentCanvas2D","currentImageCanvas2D","selectedShapeIndex","drawImage","nextImageNode","document","createElement","addEventListener","imageNodeRatio","canvasWidth","canvasHeight","canvasNodeRatio","isNaN","alt","event","nativeEvent","onWheel","currentTarget","clientHeight","scrollTop","scrollHeight","deltaY","preScale","scrollSpeed","imageScale","requestAnimationFrame","onSelect","inputElement","Component","defaultProps"],"mappings":";;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC/B,EAAE,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AACjC,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AAC9B;AACA,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;AAC1D;AACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC9C,EAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;AAC1B;AACA,EAAE,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC1B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAChD,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAK;AACL,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE;AACxB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;AACnC,GAAG,MAAM;AACT,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACpD,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICvBaA,iBAA8B,GAAG;AAC5CC,EAAAA,OAAO,EAAE,CADmC;AAE5CC,EAAAA,SAAS,EAAE,CAFiC;AAG5CC,EAAAA,UAAU,EAAE,EAHgC;AAI5CC,EAAAA,QAAQ,EAAE,EAJkC;AAK5CC,EAAAA,SAAS,EAAE,SALiC;AAM5CC,EAAAA,cAAc,EAAE,SAN4B;AAO5CC,EAAAA,UAAU,EACR,uIAR0C;AAS5CC,EAAAA,eAAe,EAAE,0BAT2B;AAU5CC,EAAAA,gBAAgB,EAAE,SAV0B;AAW5CC,EAAAA,gBAAgB,EAAE,0BAX0B;AAY5CC,EAAAA,qBAAqB,EAAE,SAZqB;AAa5CC,EAAAA,eAAe,EAAE;AAb2B;IAuEjCC,SAAb,GAYE,mBACEC,KADF,EAEEC,QAFF,EAME;AAAA;;AAAA,MAHAC,UAGA,uEAH0BhB,iBAG1B;AAAA,MAFFiB,UAEE;AAAA,MADFC,WACE;;AAAA;;AAAA,OAjBeC,cAiBf;AAAA,OAfeC,gBAef;AAAA,OAbMC,eAaN;AAAA,OAXcL,UAWd;AAAA,OATIE,WASJ;AAAA,OARID,UAQJ;;AAAA,OAQKK,WARL,GAQmB,UAACC,SAAD,EAAoBC,SAApB,EAA0C;AAC7D,gCAAiB,KAAI,CAACL,cAAL,CAAoBM,IAArC;AAAA,QAAQC,CAAR,yBAAQA,CAAR;AAAA,QAAWC,CAAX,yBAAWA,CAAX;AACA,IAAA,KAAI,CAACN,eAAL,GAAuB;AACrBO,MAAAA,OAAO,EAAEL,SAAS,GAAGG,CADA;AAErBG,MAAAA,OAAO,EAAEL,SAAS,GAAGG;AAFA,KAAvB;AAID,GAdC;;AAAA,OAgBKG,MAhBL,GAgBc,UAACP,SAAD,EAAoBC,SAApB,EAA0C;AACxD;AACA;AAEF,iCAEM,KAAI,CAACL,cAFX,CACIM,IADJ;AAAA,QACYM,KADZ,0BACYA,KADZ;AAAA,QACmBC,MADnB,0BACmBA,MADnB;AAIA,QAAIC,KAAK,GAAGV,SAAS,GAAG,KAAI,CAACF,eAAL,CAAqBO,OAA7C;AACA,QAAIM,KAAK,GAAGV,SAAS,GAAG,KAAI,CAACH,eAAL,CAAqBQ,OAA7C,CAT0D;;AAa1D,QAAGI,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGF,KAAR,IAAiB,KAAI,CAACd,UAApC,IAAkDiB,KAAK,IAAI,CAA3D,IAAgEA,KAAK,GAAGF,MAAR,IAAkB,KAAI,CAACd,WAA1F,EAAsG;AACrG,MAAA,KAAI,CAACC,cAAL,CAAoBM,IAApB,CAAyBC,CAAzB,GAA6BH,SAAS,GAAG,KAAI,CAACF,eAAL,CAAqBO,OAA9D;AACA,MAAA,KAAI,CAACT,cAAL,CAAoBM,IAApB,CAAyBE,CAAzB,GAA6BH,SAAS,GAAG,KAAI,CAACH,eAAL,CAAqBQ,OAA9D;;AACA,MAAA,KAAI,CAACT,gBAAL;AACA;AAGA,GApCC;;AAAA,OAsCKe,aAtCL,GAsCqB,UAACZ,SAAD,EAAoBC,SAApB,EAA0C;AAC/D,iCAEI,KAAI,CAACL,cAFT,CACEM,IADF;AAAA,QACUC,CADV,0BACUA,CADV;AAAA,QACaC,CADb,0BACaA,CADb;AAAA,QACgBI,KADhB,0BACgBA,KADhB;AAAA,QACuBC,MADvB,0BACuBA,MADvB;AAIA,WACE,CAAET,SAAS,GAAGG,CAAZ,IAAiBH,SAAS,GAAGG,CAAC,GAAGK,KAAlC,IACER,SAAS,GAAGG,CAAZ,IAAiBH,SAAS,GAAGG,CAAC,GAAGK,KADpC,MAEEP,SAAS,GAAGG,CAAZ,IAAiBH,SAAS,GAAGG,CAAC,GAAGK,MAAlC,IACER,SAAS,GAAGG,CAAZ,IAAiBH,SAAS,GAAGG,CAAC,GAAGK,MAHpC,CADF;AAMD,GAjDC;;AAAA,OAmDKI,KAnDL,GAmDa,UACbC,QADa,EAEbC,qBAFa,EAGbC,QAHa,EAIV;AACH,gCAAgCD,qBAAqB,CACnD,KAAI,CAACnB,cAAL,CAAoBM,IAD+B,CAArD;AAAA,QAAQC,CAAR,yBAAQA,CAAR;AAAA,QAAWC,CAAX,yBAAWA,CAAX;AAAA,QAAcI,KAAd,yBAAcA,KAAd;AAAA,QAAqBC,MAArB,yBAAqBA,MAArB;;AAGAK,IAAAA,QAAQ,CAACG,IAAT;AAEA,2BAWI,KAAI,CAACxB,UAXT;AAAA,QACEf,OADF,oBACEA,OADF;AAAA,QAEEC,SAFF,oBAEEA,SAFF;AAAA,QAGEC,UAHF,oBAGEA,UAHF;AAAA,QAIEC,QAJF,oBAIEA,QAJF;AAAA,QAKEC,SALF,oBAKEA,SALF;AAAA,QAMEC,cANF,oBAMEA,cANF;AAAA,QAOEC,UAPF,oBAOEA,UAPF;AAAA,QAQEC,eARF,oBAQEA,eARF;AAAA,QASEC,gBATF,oBASEA,gBATF;AAAA,QAUEC,gBAVF,oBAUEA,gBAVF;AAaA2B,IAAAA,QAAQ,CAAClC,UAAT,GAAsBA,UAAtB;AACAkC,IAAAA,QAAQ,CAACI,WAAT,GAAuB/B,gBAAvB;AACA2B,IAAAA,QAAQ,CAACK,WAAT,GAAuBjC,gBAAvB;AACA4B,IAAAA,QAAQ,CAACnC,SAAT,GAAqBA,SAArB;AACAmC,IAAAA,QAAQ,CAACM,UAAT,CAAoBjB,CAApB,EAAuBC,CAAvB,EAA0BI,KAA1B,EAAiCC,MAAjC;AACAK,IAAAA,QAAQ,CAACO,OAAT;;AACA,QAAIL,QAAJ,EAAc;AACZF,MAAAA,QAAQ,CAACQ,SAAT,GAAqBrC,eAArB;AACA6B,MAAAA,QAAQ,CAACS,QAAT,CAAkBpB,CAAlB,EAAqBC,CAArB,EAAwBI,KAAxB,EAA+BC,MAA/B;AACD,KAHD,MAGO;AACL,UAAQe,QAAR,GAAoB,KAAI,CAAC5B,cAAzB,CAAQ4B,OAAR;;AACA,UAAIA,QAAJ,EAAa;AACXV,QAAAA,QAAQ,CAACW,IAAT,aAAmB5C,QAAnB,gBAAiCG,UAAjC;AACA,YAAM0C,OAAO,GAAGZ,QAAQ,CAACa,WAAT,CAAqBH,QAArB,CAAhB;AACAV,QAAAA,QAAQ,CAACG,IAAT;AACAH,QAAAA,QAAQ,CAACQ,SAAT,GAAqBvC,cAArB;AACA+B,QAAAA,QAAQ,CAACS,QAAT,CACEpB,CADF,EAEEC,CAFF,EAGEsB,OAAO,CAAClB,KAAR,GAAgB9B,OAAO,GAAG,CAH5B,EAIEG,QAAQ,GAAGH,OAAO,GAAG,CAJvB;AAMAoC,QAAAA,QAAQ,CAACc,YAAT,GAAwB,KAAxB;AACAd,QAAAA,QAAQ,CAACQ,SAAT,GAAqBxC,SAArB;AACAgC,QAAAA,QAAQ,CAACe,QAAT,CAAkBL,QAAlB,EAA2BrB,CAAC,GAAGzB,OAA/B,EAAwC0B,CAAC,GAAG1B,OAA5C;AACD;AACF;;AACDoC,IAAAA,QAAQ,CAACO,OAAT;AAEA,WAAO;AAAElB,MAAAA,CAAC,EAADA,CAAF;AAAKC,MAAAA,CAAC,EAADA,CAAL;AAAQI,MAAAA,KAAK,EAALA,KAAR;AAAeC,MAAAA,MAAM,EAANA;AAAf,KAAP;AACD,GAxGC;;AAAA,OA0GKqB,UA1GL,GA0GkB,gBAUd;AAAA,sBATJ3B,CASI;AAAA,QATJA,CASI,uBATA,KAAI,CAACP,cAAL,CAAoBM,IAApB,CAAyBC,CASzB;AAAA,sBARJC,CAQI;AAAA,QARJA,CAQI,uBARA,KAAI,CAACR,cAAL,CAAoBM,IAApB,CAAyBE,CAQzB;AAAA,0BAPJI,KAOI;AAAA,QAPJA,KAOI,2BAPI,KAAI,CAACZ,cAAL,CAAoBM,IAApB,CAAyBM,KAO7B;AAAA,2BANJC,MAMI;AAAA,QANJA,MAMI,4BANK,KAAI,CAACb,cAAL,CAAoBM,IAApB,CAAyBO,MAM9B;AACJ,IAAA,KAAI,CAACb,cAAL,CAAoBM,IAApB,CAAyBC,CAAzB,GAA6BA,CAA7B;AACA,IAAA,KAAI,CAACP,cAAL,CAAoBM,IAApB,CAAyBE,CAAzB,GAA6BA,CAA7B;AACA,IAAA,KAAI,CAACR,cAAL,CAAoBM,IAApB,CAAyBM,KAAzB,GAAiCA,KAAjC;AACA,IAAA,KAAI,CAACZ,cAAL,CAAoBM,IAApB,CAAyBO,MAAzB,GAAkCA,MAAlC;;AACA,IAAA,KAAI,CAACZ,gBAAL;AACD,GA1HC;;AAAA,OA4HKkC,iBA5HL,GA4HyB,YAAM;AAC/B,WAAO,KAAI,CAACnC,cAAZ;AACD,GA9HC;;AAAA,OAgIKoC,UAhIL,GAgIkB,UAACR,OAAD,EAAqB;AACvC,IAAA,KAAI,CAAC5B,cAAL,CAAoB4B,OAApB,GAA8BA,OAA9B;AACD,GAlIC;;AAAA,OAoIKS,KApIL,GAoIa,UAAC1C,IAAD,EAAuB;AACpC,WACEA,IAAI,CAAC2C,EAAL,KAAY,KAAI,CAACtC,cAAL,CAAoBsC,EAAhC,IACA3C,IAAI,CAACiC,OAAL,KAAiB,KAAI,CAAC5B,cAAL,CAAoB4B,OADrC,IAEAjC,IAAI,CAACW,IAAL,CAAUC,CAAV,KAAgB,KAAI,CAACP,cAAL,CAAoBM,IAApB,CAAyBC,CAFzC,IAGAZ,IAAI,CAACW,IAAL,CAAUE,CAAV,KAAgB,KAAI,CAACR,cAAL,CAAoBM,IAApB,CAAyBE,CAHzC,IAIAb,IAAI,CAACW,IAAL,CAAUM,KAAV,KAAoB,KAAI,CAACZ,cAAL,CAAoBM,IAApB,CAAyBM,KAJ7C,IAKAjB,IAAI,CAACW,IAAL,CAAUO,MAAV,KAAqB,KAAI,CAACb,cAAL,CAAoBM,IAApB,CAAyBO,MANhD;AAQD,GA7IC;;AACA,OAAKb,cAAL,GAAsBL,KAAtB;AACA,OAAKM,gBAAL,GAAwBL,QAAxB;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACF,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AACC,CAxBH;;IC5DqBwC;AASnB,uBAAYC,MAAZ,EAA2BC,MAA3B,EAA0C;AAAA;;AAAA;;AAAA,SARzBD,KAQyB;AAAA,SAPlCE,sBAOkC;AAAA,SANlCD,KAMkC;;AAAA,SAKnCzB,aALmC,GAKnB,UAACZ,SAAD,EAAoBC,SAApB,EAA0C;AAC/D,UAAMsC,kBAAkB,GAAG,KAAI,CAACC,sBAAL,CACzBxC,SADyB,EAEzBC,SAFyB,CAA3B;;AAIA,aAAOsC,kBAAkB,IAAI,CAA7B;AACD,KAXyC;;AAAA,SAanCE,mBAbmC,GAab,UAACzC,SAAD,EAAoBC,SAApB,EAA0C;AACrE,MAAA,KAAI,CAACqC,sBAAL,GAA8B,KAAI,CAACE,sBAAL,CAC5BxC,SAD4B,EAE5BC,SAF4B,CAA9B;AAID,KAlByC;;AAAA,SAoBnCyC,gBApBmC,GAoBhB,UAAC1C,SAAD,EAAoBC,SAApB,EAA0C;AAClE,UAAM0C,mBAAmB,GAAG,KAAI,CAACC,kBAAL,EAA5B;;AACAD,MAAAA,mBAAmB,CAAC,KAAI,CAACL,sBAAN,CAAnB,CAAiDO,MAAjD,CACE7C,SADF,EAEEC,SAFF;AAID,KA1ByC;;AAAA,SA4BnCY,KA5BmC,GA4B3B,UACbC,QADa,EAEbC,qBAFa,EAGbsB,KAHa,EAIV;AACH,MAAA,KAAI,CAACA,KAAL,GAAaA,KAAb;;AAEA,UAAMS,eAAe,GAAG,KAAI,CAACF,kBAAL,EAAxB;;AACA9B,MAAAA,QAAQ,CAACG,IAAT;AACAH,MAAAA,QAAQ,CAACQ,SAAT,GAAqB,KAAI,CAACc,KAAL,CAAW3C,UAAX,CAAsBL,qBAA3C;;AALG,iDAOgB0D,eAPhB;AAAA;;AAAA;AAOH,4DAAoC;AAAA,cAAzBC,IAAyB;;AAClC,sCAAgChC,qBAAqB,CAAC;AACpDZ,YAAAA,CAAC,EAAE4C,IAAI,CAAC5C,CAAL,GAAS,KAAI,CAAC6C,SAAL,GAAiB,CADuB;AAEpD5C,YAAAA,CAAC,EAAE2C,IAAI,CAAC3C,CAAL,GAAS,KAAI,CAAC4C,SAAL,GAAiB,CAFuB;AAGpDxC,YAAAA,KAAK,EAAE,KAAI,CAACwC,SAHwC;AAIpDvC,YAAAA,MAAM,EAAE,KAAI,CAACuC;AAJuC,WAAD,CAArD;AAAA,cAAQ7C,CAAR,yBAAQA,CAAR;AAAA,cAAWC,CAAX,yBAAWA,CAAX;AAAA,cAAcI,KAAd,yBAAcA,KAAd;AAAA,cAAqBC,MAArB,yBAAqBA,MAArB;;AAMAK,UAAAA,QAAQ,CAACS,QAAT,CAAkBpB,CAAlB,EAAqBC,CAArB,EAAwBI,KAAxB,EAA+BC,MAA/B;AACD;AAfE;AAAA;AAAA;AAAA;AAAA;;AAiBHK,MAAAA,QAAQ,CAACO,OAAT;AACD,KAlDyC;;AAAA,SAoDlCmB,sBApDkC,GAoDT,UAACxC,SAAD,EAAoBC,SAApB,EAA0C;AACzE,UAAM6C,eAAe,GAAG,KAAI,CAACF,kBAAL,EAAxB;;AACA,aAAOE,eAAe,CAACG,SAAhB,CAA0B,UAACF,IAAD;AAAA,eAC/B,KAAI,CAACG,qBAAL,CAA2BH,IAAI,CAAC5C,CAAhC,EAAmC4C,IAAI,CAAC3C,CAAxC,EAA2CJ,SAA3C,EAAsDC,SAAtD,CAD+B;AAAA,OAA1B,CAAP;AAGD,KAzDyC;;AAAA,SA2DlCiD,qBA3DkC,GA2DV,UAC9BC,WAD8B,EAE9BC,WAF8B,EAG9BpD,SAH8B,EAI9BC,SAJ8B,EAK3B;AACH,aACEoD,IAAI,CAACC,GAAL,CAAStD,SAAS,GAAGmD,WAArB,KAAqC,KAAI,CAACH,SAAL,GAAiB,CAAtD,IACAK,IAAI,CAACC,GAAL,CAASrD,SAAS,GAAGmD,WAArB,KAAqC,KAAI,CAACJ,SAAL,GAAiB,CAFxD;AAID,KArEyC;;AAAA,SAuElCJ,kBAvEkC,GAuEb,YAAM;AACjC,UAAQR,KAAR,GAAkB,KAAlB,CAAQA,KAAR;AACA,kCAAgCA,KAAK,CAACL,iBAAN,GAA0B7B,IAA1D;AAAA,UAAQC,CAAR,yBAAQA,CAAR;AAAA,UAAWC,CAAX,yBAAWA,CAAX;AAAA,UAAcI,KAAd,yBAAcA,KAAd;AAAA,UAAqBC,MAArB,yBAAqBA,MAArB;AACA,aAAO,CACL;AACEN,QAAAA,CAAC,EAADA,CADF;AAEEC,QAAAA,CAAC,EAADA,CAFF;AAGEyC,QAAAA,MAAM,EAAE,gBAAC7C,SAAD,EAAoBC,SAApB,EAA0C;AAChDmC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AACf3B,YAAAA,CAAC,EAAEH,SADY;AAEfI,YAAAA,CAAC,EAAEH,SAFY;AAGfO,YAAAA,KAAK,EAAEA,KAAK,GAAGL,CAAR,GAAYH,SAHJ;AAIfS,YAAAA,MAAM,EAAEA,MAAM,GAAGL,CAAT,GAAaH;AAJN,WAAjB;AAMD;AAVH,OADK,EAaL;AACEE,QAAAA,CAAC,EAAEA,CAAC,GAAGK,KAAK,GAAG,CADjB;AAEEJ,QAAAA,CAAC,EAADA,CAFF;AAGEyC,QAAAA,MAAM,EAAE,gBAACU,CAAD,EAAYtD,SAAZ,EAAkC;AACxCmC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AACf1B,YAAAA,CAAC,EAAEH,SADY;AAEfQ,YAAAA,MAAM,EAAEA,MAAM,GAAGL,CAAT,GAAaH;AAFN,WAAjB;AAID;AARH,OAbK,EAuBL;AACEE,QAAAA,CAAC,EAAEA,CAAC,GAAGK,KADT;AAEEJ,QAAAA,CAAC,EAADA,CAFF;AAGEyC,QAAAA,MAAM,EAAE,gBAAC7C,SAAD,EAAoBC,SAApB,EAA0C;AAChDmC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AACf3B,YAAAA,CAAC,EAADA,CADe;AAEfC,YAAAA,CAAC,EAAEH,SAFY;AAGfO,YAAAA,KAAK,EAAER,SAAS,GAAGG,CAHJ;AAIfM,YAAAA,MAAM,EAAEL,CAAC,GAAGK,MAAJ,GAAaR;AAJN,WAAjB;AAMD;AAVH,OAvBK,EAmCL;AACEE,QAAAA,CAAC,EAADA,CADF;AAEEC,QAAAA,CAAC,EAAEA,CAAC,GAAGK,MAAM,GAAG,CAFlB;AAGEoC,QAAAA,MAAM,EAAE,gBAAC7C,SAAD,EAAuB;AAC7BoC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AACf3B,YAAAA,CAAC,EAAEH,SADY;AAEfQ,YAAAA,KAAK,EAAEA,KAAK,GAAGL,CAAR,GAAYH;AAFJ,WAAjB;AAID;AARH,OAnCK,EA6CL;AACEG,QAAAA,CAAC,EAAEA,CAAC,GAAGK,KADT;AAEEJ,QAAAA,CAAC,EAAEA,CAAC,GAAGK,MAAM,GAAG,CAFlB;AAGEoC,QAAAA,MAAM,EAAE,gBAAC7C,SAAD,EAAuB;AAC7BoC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AAAEtB,YAAAA,KAAK,EAAER,SAAS,GAAGG;AAArB,WAAjB;AACD;AALH,OA7CK,EAoDL;AACEA,QAAAA,CAAC,EAADA,CADF;AAEEC,QAAAA,CAAC,EAAEA,CAAC,GAAGK,MAFT;AAGEoC,QAAAA,MAAM,EAAE,gBAAC7C,SAAD,EAAoBC,SAApB,EAA0C;AAChDmC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AACf3B,YAAAA,CAAC,EAAEH,SADY;AAEfQ,YAAAA,KAAK,EAAEA,KAAK,GAAGL,CAAR,GAAYH,SAFJ;AAGfS,YAAAA,MAAM,EAAER,SAAS,GAAGG;AAHL,WAAjB;AAKD;AATH,OApDK,EA+DL;AACED,QAAAA,CAAC,EAAEA,CAAC,GAAGK,KAAK,GAAG,CADjB;AAEEJ,QAAAA,CAAC,EAAEA,CAAC,GAAGK,MAFT;AAGEoC,QAAAA,MAAM,EAAE,gBAACU,CAAD,EAAYtD,SAAZ,EAAkC;AACxCmC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AACfrB,YAAAA,MAAM,EAAER,SAAS,GAAGG;AADL,WAAjB;AAGD;AAPH,OA/DK,EAwEL;AACED,QAAAA,CAAC,EAAEA,CAAC,GAAGK,KADT;AAEEJ,QAAAA,CAAC,EAAEA,CAAC,GAAGK,MAFT;AAGEoC,QAAAA,MAAM,EAAE,gBAAC7C,SAAD,EAAoBC,SAApB,EAA0C;AAChDmC,UAAAA,KAAK,CAACN,UAAN,CAAiB;AACftB,YAAAA,KAAK,EAAER,SAAS,GAAGG,CADJ;AAEfM,YAAAA,MAAM,EAAER,SAAS,GAAGG;AAFL,WAAjB;AAID;AARH,OAxEK,CAAP;AAmFD,KA7JyC;;AACxC,SAAKgC,KAAL,GAAaA,MAAb;AACA,SAAKC,KAAL,GAAaA,MAAb;AACD;;;;SAPD,eAAwB;AACtB,aAAO,KAAKD,KAAL,CAAW3C,UAAX,CAAsBJ,eAAtB,GAAwC,KAAKgD,KAApD;AACD;;;;;;ACpBH,gBAAe,YAAa;AAAA,MAAZmB,GAAY,uEAAN,CAAM;AAC1B,MAAMC,KAAK,GAAG,kDAAd;AACA,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAArB;AACA,MAAIzB,EAAE,GAAG,EAAT;;AACA,OAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,EAA1B,EAA8B;AAC5B1B,IAAAA,EAAE,IAAIuB,KAAK,CAACI,MAAN,CAAaR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,MAAL,KAAgBL,MAA3B,CAAb,CAAN;AACD;;AACD,SAAOxB,EAAP;AACD,CARD;;ICKqB8B,0BAEnB,iCAAYC,OAAZ,EAA6C;AAAA;;AAAA;;AAAA,OAD5BA,OAC4B;;AAAA,OAGtCC,WAHsC,GAGxB;AAAA,WAAMC,SAAN;AAAA,GAHwB;;AAAA,OAItCC,WAJsC,GAIxB,UAACpE,SAAD,EAAoBC,SAApB,EAA0C;AAC7D,QAAQoE,MAAR,GAAmB,KAAI,CAACJ,OAAxB,CAAQI,MAAR;;AACA,QAAIA,MAAM,CAACV,MAAP,GAAgB,CAApB,EAAuB;AACrB,UAAMW,YAAY,GAAGD,MAAM,CAACA,MAAM,CAACV,MAAP,GAAgB,CAAjB,CAA3B;;AACA,kCAEIW,YAAY,CAACvC,iBAAb,EAFJ;AAAA,yDACE7B,IADF;AAAA,UACUC,CADV,0BACUA,CADV;AAAA,UACaC,CADb,0BACaA,CADb;;AAGAkE,MAAAA,YAAY,CAACxC,UAAb,CAAwB;AACtBtB,QAAAA,KAAK,EAAER,SAAS,GAAGG,CADG;AAEtBM,QAAAA,MAAM,EAAER,SAAS,GAAGG;AAFE,OAAxB;AAID;AACF,GAhB4C;;AAAA,OAkBtCmE,SAlBsC,GAkB1B,YAAM;AACvB,wBAAsD,KAAI,CAACN,OAA3D;AAAA,QAAQI,MAAR,iBAAQA,MAAR;AAAA,QAAgBG,aAAhB,iBAAgBA,aAAhB;AAAA,QAA+BC,kBAA/B,iBAA+BA,kBAA/B;AACA,QAAMlF,IAAI,GAAG8E,MAAM,CAACK,GAAP,EAAb;;AACA,QACEnF,IAAI,IACJA,IAAI,CAACwC,iBAAL,GAAyB7B,IAAzB,CAA8BM,KAA9B,KAAwC,CADxC,IAEAjB,IAAI,CAACwC,iBAAL,GAAyB7B,IAAzB,CAA8BO,MAA9B,KAAyC,CAH3C,EAIE;AACA4D,MAAAA,MAAM,CAACM,IAAP,CAAYpF,IAAZ;AACD,KAND,MAMO;AACL,UAAIA,IAAI,IAAI,KAAI,CAACqF,0BAAL,CAAgCrF,IAAhC,CAAZ,EAAmD;AACjD8E,QAAAA,MAAM,CAACM,IAAP,CAAYpF,IAAZ;AACAiF,QAAAA,aAAa;AACd,OAHD,MAGO;AACL,QAAA,KAAI,CAACP,OAAL,CAAaY,UAAb,GAA0B,IAA1B;AACAL,QAAAA,aAAa;AACd;AACF;;AACDC,IAAAA,kBAAkB,CAAC,IAAIK,sBAAJ,CAA2B,KAAI,CAACb,OAAhC,CAAD,CAAlB;AACD,GArC4C;;AAAA,OAuCrCW,0BAvCqC,GAuCR,UAACxC,KAAD,EAAmB;AACtD,QAAI,KAAI,CAAC6B,OAAL,CAAaY,UAAjB,EAA6B;AAC3B;AACA,aAAO,KAAP;AACD;;AACD,QACE,CAAC,KAAI,CAACZ,OAAL,CAAac,qBAAd,IACA,KAAI,CAACd,OAAL,CAAac,qBAAb,CAAmCpB,MAAnC,KAA8C,CAFhD,EAGE;AACA,aAAO,KAAP;AACD;;AACD,+CAAwB,KAAI,CAACM,OAAL,CAAac,qBAArC;AAAA,QAAOvE,KAAP;AAAA,QAAcC,MAAd;;AACA2B,IAAAA,KAAK,CAACN,UAAN,CAAiB;AACftB,MAAAA,KAAK,EAALA,KADe;AAEfC,MAAAA,MAAM,EAANA;AAFe,KAAjB;AAIA,WAAO,IAAP;AACD,GAxD4C;;AAAA,OA0DtCuE,YA1DsC,GA0DvB;AAAA,WAAM,KAAI,CAACT,SAAL,EAAN;AAAA,GA1DuB;;AAC3C,OAAKN,OAAL,GAAeA,OAAf;AACD;;ICLkBgB,0BAEnB,iCAAYhB,OAAZ,EAA6C;AAAA;;AAAA;;AAAA,OAD5BA,OAC4B;;AAAA,OAGtCC,WAHsC,GAGxB;AAAA,WAAMC,SAAN;AAAA,GAHwB;;AAAA,OAItCC,WAJsC,GAIxB,UAACpE,SAAD,EAAoBC,SAApB,EAA0C;AAC7D,QAAQoE,MAAR,GAAmB,KAAI,CAACJ,OAAxB,CAAQI,MAAR;AACA,QAAMC,YAAY,GAAGD,MAAM,CAACA,MAAM,CAACV,MAAP,GAAgB,CAAjB,CAA3B;AACAW,IAAAA,YAAY,CAAC/D,MAAb,CAAoBP,SAApB,EAA+BC,SAA/B;AACD,GAR4C;;AAAA,OAUtCsE,SAVsC,GAU1B,YAAM;AACvB,QAAQE,kBAAR,GAA+B,KAAI,CAACR,OAApC,CAAQQ,kBAAR;AACAA,IAAAA,kBAAkB,CAAC,IAAIK,sBAAJ,CAA2B,KAAI,CAACb,OAAhC,CAAD,CAAlB;AACD,GAb4C;;AAAA,OAetCe,YAfsC,GAevB;AAAA,WAAM,KAAI,CAACT,SAAL,EAAN;AAAA,GAfuB;;AAC3C,OAAKN,OAAL,GAAeA,OAAf;AACD;;ICJkBiB,sBAEnB,6BAAYjB,OAAZ,EAA6C;AAAA;;AAAA;;AAAA,OAD5BA,OAC4B;;AAAA,OAGtCC,WAHsC,GAGxB;AAAA,WAAMC,SAAN;AAAA,GAHwB;;AAAA,OAItCC,WAJsC,GAIxB,UAACpE,SAAD,EAAoBC,SAApB,EAA0C;AAC7D,QAAQkF,kBAAR,GAA+B,KAAI,CAAClB,OAApC,CAAQkB,kBAAR;;AACA,QAAIA,kBAAJ,EAAwB;AACtBA,MAAAA,kBAAkB,CAACzC,gBAAnB,CAAoC1C,SAApC,EAA+CC,SAA/C;AACD;AACF,GAT4C;;AAAA,OAWtCsE,SAXsC,GAW1B,YAAM;AACvB,QAAQE,kBAAR,GAA+B,KAAI,CAACR,OAApC,CAAQQ,kBAAR;AACAA,IAAAA,kBAAkB,CAAC,IAAIK,sBAAJ,CAA2B,KAAI,CAACb,OAAhC,CAAD,CAAlB;AACD,GAd4C;;AAAA,OAgBtCe,YAhBsC,GAgBvB;AAAA,WAAM,KAAI,CAACT,SAAL,EAAN;AAAA,GAhBuB;;AAC3C,OAAKN,OAAL,GAAeA,OAAf;AACD;;ICCUa,sBAAb,GAEE,gCAAYb,OAAZ,EAA6C;AAAA;;AAAA;;AAAA,OAD5BA,OAC4B;;AAAA,OAKtCG,WALsC,GAKxB;AAAA,WAAMD,SAAN;AAAA,GALwB;;AAAA,OAMtCI,SANsC,GAM1B;AAAA,WAAMJ,SAAN;AAAA,GAN0B;;AAAA,OAOtCa,YAPsC,GAOvB;AAAA,WAAMb,SAAN;AAAA,GAPuB;;AAAA,OAStCD,WATsC,GASxB,UAAClE,SAAD,EAAoBC,SAApB,EAA0C;AAC7D,wBAKI,KAAI,CAACgE,OALT;AAAA,QACEI,MADF,iBACEA,MADF;AAAA,QAEEc,kBAFF,iBAEEA,kBAFF;AAAA,QAGEX,aAHF,iBAGEA,aAHF;AAAA,QAIsBY,QAJtB,iBAIEX,kBAJF;;AAOA,QACEU,kBAAkB,IAClBA,kBAAkB,CAACvE,aAAnB,CAAiCZ,SAAjC,EAA4CC,SAA5C,CAFF,EAGE;AACAkF,MAAAA,kBAAkB,CAAC1C,mBAAnB,CAAuCzC,SAAvC,EAAkDC,SAAlD;AACAmF,MAAAA,QAAQ,CAAC,IAAIF,mBAAJ,CAAwB,KAAI,CAACjB,OAA7B,CAAD,CAAR;AACA;AACD;;AAED,SAAK,IAAIL,CAAC,GAAGS,MAAM,CAACV,MAAP,GAAgB,CAA7B,EAAgCC,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,UAAIS,MAAM,CAACT,CAAD,CAAN,CAAUhD,aAAV,CAAwBZ,SAAxB,EAAmCC,SAAnC,CAAJ,EAAmD;AACjD,QAAA,KAAI,CAACgE,OAAL,CAAaY,UAAb,GAA0BR,MAAM,CAACT,CAAD,CAAN,CAAU7B,iBAAV,GAA8BG,EAAxD;AACA,QAAA,KAAI,CAAC+B,OAAL,CAAakB,kBAAb,GAAkC,IAAIhD,WAAJ,CAChCkC,MAAM,CAACT,CAAD,CAD0B,EAEhC,KAAI,CAACK,OAAL,CAAaoB,UAAb,CAAwBhD,KAFQ,CAAlC;;AAIA,6BAAwBgC,MAAM,CAACiB,MAAP,CAAc1B,CAAd,EAAiB,CAAjB,CAAxB;AAAA;AAAA,YAAO2B,aAAP;;AACAlB,QAAAA,MAAM,CAACM,IAAP,CAAYY,aAAZ;AACAA,QAAAA,aAAa,CAACxF,WAAd,CAA0BC,SAA1B,EAAqCC,SAArC;AACAuE,QAAAA,aAAa;AACbY,QAAAA,QAAQ,CAAC,IAAIH,uBAAJ,CAA4B,KAAI,CAAChB,OAAjC,CAAD,CAAR;AACA;AACD;AACF;;AACD,IAAA,KAAI,CAACA,OAAL,CAAaI,MAAb,CAAoBM,IAApB,CACE,IAAIrF,SAAJ,CACE;AACE4C,MAAAA,EAAE,EAAEsD,QAAQ,EADd;AAEEtF,MAAAA,IAAI,EAAE;AACJC,QAAAA,CAAC,EAAEH,SADC;AAEJI,QAAAA,CAAC,EAAEH,SAFC;AAGJO,QAAAA,KAAK,EAAE,CAHH;AAIJC,QAAAA,MAAM,EAAE,CAJJ;AAKJgF,QAAAA,IAAI,EAAE;AALF;AAFR,KADF,EAWEjB,aAXF,EAYE,KAAI,CAACP,OAAL,CAAayB,eAZf,EAaF,KAAI,CAACzB,OAAL,CAAa0B,KAAb,CAAmBnF,KAbjB,EAcF,KAAI,CAACyD,OAAL,CAAa0B,KAAb,CAAmBlF,MAdjB,CADF;;AAmBA2E,IAAAA,QAAQ,CAAC,IAAIpB,uBAAJ,CAA4B,KAAI,CAACC,OAAjC,CAAD,CAAR;AACD,GA7D4C;;AAC3C,OAAKA,OAAL,GAAeA,OAAf,CAD2C;AAG5C,CALH;;ACPA,oBAAe,YAAM;AACnB,sBACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,KAAK,EAAC,4BAFR;AAGE,IAAA,OAAO,EAAC;AAHV,kBAKE;AAAG,iBAAU;AAAb,kBACE;AAAG,iBAAU;AAAb,kBACE;AAAM,IAAA,KAAK,EAAC,IAAZ;AAAiB,IAAA,MAAM,EAAC,IAAxB;AAA6B,IAAA,OAAO,EAAC;AAArC,IADF,eAEE;AAAM,IAAA,CAAC,EAAC;AAAR,IAFF,CADF,CALF,CADF;AAcD,CAfD;;ACQA,2BAAe,gBAKa;AAAA,MAJ1B2B,KAI0B,QAJ1BA,KAI0B;AAAA,MAH1BpG,SAG0B,QAH1BA,QAG0B;AAAA,MAF1BqG,QAE0B,QAF1BA,QAE0B;AAAA,8BAD1BC,WAC0B;AAAA,MAD1BA,WAC0B,iCADZ,mBACY;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AACE,IAAA,SAAS,EAAC,gCADZ;AAEE,IAAA,WAAW,EAAEA,WAFf;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,aAAOvG,SAAQ,CAACuG,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAf;AAAA;AAJZ,IADF,eAOE;AAAG,IAAA,SAAS,EAAC,iCAAb;AAA+C,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,EAAd;AAAA;AAAxD,kBACE,oBAAC,YAAD,OADF,CAPF,CADF;AAaD,CAnBD;;ACPA,8BAAc,gBASR;AAAA,MARLD,KAQK,QARLA,KAQK;AAAA,MAPLK,IAOK,QAPLA,IAOK;AAAA,MANLC,GAMK,QANLA,GAMK;AAAA,MALLL,QAKK,QALLA,QAKK;AAAA,MAJLM,MAIK,QAJLA,MAIK;AAAA,MAHLC,MAGK,QAHLA,MAGK;AAAA,MAFLC,oBAEK,QAFLA,oBAEK;AAAA,MADLC,eACK,QADLA,eACK;AACL,sBAEC;AAAK,IAAA,SAAS,EAAC,6BAAf;AACC,IAAA,KAAK,EAAE;AACNC,MAAAA,QAAQ,EAAG,UADL;AAENN,MAAAA,IAAI,EAAJA,IAFM;AAGNC,MAAAA,GAAG,EAAHA;AAHM;AADR,kBAOC;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAqD,IAAA,OAAO,EAAE;AAAA,aAAMC,MAAM,EAAZ;AAAA;AAA9D,kBACC;AAAM,IAAA,SAAS,EAAEP,KAAK,GAAG,UAAH,GAAgB;AAAtC,KAA2CA,KAAK,GAAGA,KAAH,GAAW,mBAA3D,CADD,eAEC;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAuC,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,EAAd;AAAA;AAAhD,kBACC,oBAAC,YAAD,OADD,CAFD,CAPD,EAcEO,MAAM,iBACL;AAAK,IAAA,SAAS,EAAC;AAAf,kBACC,gCAEEE,eAAe,CAACE,GAAhB,CAAoB,UAAAzD,IAAI,EAAI;AAC3B,wBACC;AAAI,MAAA,OAAO,EAAE;AAAA,eAAMsD,oBAAoB,CAACtD,IAAD,CAA1B;AAAA;AAAb,oBACC,+BAAIA,IAAJ,CADD,CADD;AAKA,GAND,CAFF,CADD,CAfH,CAFD;AAkCA,CA5CD;;ACuCA,IAAM0D,YAAyB,GAAG;AAChCpE,EAAAA,KAAK,EAAE,CADyB;AAEhCqE,EAAAA,OAAO,EAAE,CAFuB;AAGhCC,EAAAA,OAAO,EAAE;AAHuB,CAAlC;;IAMqBC;;;;;;;;;;;;;;;UAoBZC,QAAQ;AACbC,MAAAA,aAAa,EAAE;AACbb,QAAAA,IAAI,EAAE,CADO;AAEbC,QAAAA,GAAG,EAAE;AAFQ,OADF;AAKfE,MAAAA,MAAM,EAAG,KALM;AAMbW,MAAAA,SAAS,EAAE,KANE;AAObC,MAAAA,YAAY,EAAE;AAPD;UA4BR3C,SAAmB;UACnBgB,aAAaoB;UACbtB;UAEC8B,wBAAuC;UACvCC;UACAC,yBAAYC,KAAK,CAACC,SAAN;UACZvG;UACAwG,8BAAiBF,KAAK,CAACC,SAAN;UACjBE;UACAC;UACAC,yBAA2C,IAAI3C,sBAAJ;;UAI5C4C,oBAAoB,YAAM;AAC/B,UAAMC,aAAa,GAAG,MAAKR,SAAL,CAAeS,OAArC;AACA,UAAMC,kBAAkB,GAAG,MAAKP,cAAL,CAAoBM,OAA/C;;AACA,UAAID,aAAa,IAAIE,kBAArB,EAAyC;AACvC,cAAKC,YAAL;;AAEA,cAAKhH,QAAL,GAAgB6G,aAAa,CAACI,UAAd,CAAyB,IAAzB,CAAhB;AACA,cAAKR,aAAL,GAAqBM,kBAAkB,CAACE,UAAnB,CAA8B,IAA9B,CAArB;;AACA,cAAKC,aAAL;AACD;;AAED,YAAKC,kBAAL;;AACA,YAAKC,cAAL;AACD;;UAEMC,qBAAqB,UAACC,QAAD,EAA4C;AACtE,wBAAiC,MAAKzC,KAAtC;AAAA,UAAQnF,KAAR,eAAQA,KAAR;AAAA,UAAeC,MAAf,eAAeA,MAAf;AAAA,UAAuB4H,KAAvB,eAAuBA,KAAvB;;AACA,UAAID,QAAQ,CAAC5H,KAAT,KAAmBA,KAAnB,IAA4B4H,QAAQ,CAAC3H,MAAT,KAAoBA,MAApD,EAA4D;AAC1D,cAAKqH,YAAL;;AACA,cAAKtD,aAAL;;AACA,cAAKwD,aAAL;AACD;;AACD,UAAII,QAAQ,CAACC,KAAT,KAAmBA,KAAvB,EAA8B;AAC5B,cAAKC,UAAL;;AACA,YAAI,MAAKd,mBAAT,EAA8B;AAC5B,gBAAKA,mBAAL,CAAyBe,GAAzB,GAA+BF,KAA/B;AACD,SAFD,MAEO;AACL,gBAAKL,aAAL;AACD;AACF;;AAED,YAAKC,kBAAL;;AACA,YAAKC,cAAL;AACD;;UAEMM,yBAAyB,UAACxI,SAAD,EAAoBC,SAApB,EAA0C;AACxE,6BAAoC,MAAKoF,UAAzC;AAAA,UAAQqB,OAAR,oBAAQA,OAAR;AAAA,UAAiBC,OAAjB,oBAAiBA,OAAjB;AAAA,UAA0BtE,KAA1B,oBAA0BA,KAA1B;AACA,aAAO;AACLrC,QAAAA,SAAS,EAAE,CAACA,SAAS,GAAG0G,OAAb,IAAwBrE,KAD9B;AAELpC,QAAAA,SAAS,EAAE,CAACA,SAAS,GAAG0G,OAAb,IAAwBtE;AAF9B,OAAP;AAID;;UAEMoG,yBAAyB,UAACC,SAAD,EAAuC;AACrE,8BAAoC,MAAKrD,UAAzC;AAAA,UAAQqB,OAAR,qBAAQA,OAAR;AAAA,UAAiBC,OAAjB,qBAAiBA,OAAjB;AAAA,UAA0BtE,KAA1B,qBAA0BA,KAA1B;AACA,UAAQlC,CAAR,GAAgCuI,SAAhC,CAAQvI,CAAR;AAAA,UAAWC,CAAX,GAAgCsI,SAAhC,CAAWtI,CAAX;AAAA,UAAcI,KAAd,GAAgCkI,SAAhC,CAAclI,KAAd;AAAA,UAAqBC,MAArB,GAAgCiI,SAAhC,CAAqBjI,MAArB;AACA,aAAO;AACLN,QAAAA,CAAC,EAAEA,CAAC,GAAGkC,KAAJ,GAAYqE,OADV;AAELtG,QAAAA,CAAC,EAAEA,CAAC,GAAGiC,KAAJ,GAAYsE,OAFV;AAGLnG,QAAAA,KAAK,EAAEA,KAAK,GAAG6B,KAHV;AAIL5B,QAAAA,MAAM,EAAEA,MAAM,GAAG4B;AAJZ,OAAP;AAMD;;UA4DMoC,qBAAqB,UAACkE,eAAD,EAAuC;AACjE,YAAKlB,sBAAL,GAA8BkB,eAA9B;AACD;;UAEMnE,gBAAgB,YAAM;AAC3B,UAAI,MAAK1D,QAAL,IAAiB,MAAKqG,SAAL,CAAeS,OAApC,EAA6C;AAC3C,cAAK9G,QAAL,CAAc8H,SAAd,CACE,CADF,EAEE,CAFF,EAGE,MAAKzB,SAAL,CAAeS,OAAf,CAAuBpH,KAHzB,EAIE,MAAK2G,SAAL,CAAeS,OAAf,CAAuBnH,MAJzB;;AAOA,YAAIoI,eAAe,GAAG,KAAtB;;AAR2C,mDAUxB,MAAKxE,MAVmB;AAAA;;AAAA;AAU3C,8DAAgC;AAAA,gBAArBtB,IAAqB;;AAC9B,gBAAM+F,UAAU,GAAG/F,IAAI,CAAChB,iBAAL,GAAyBG,EAAzB,KAAgC,MAAK2C,UAAxD;;AACA,8BAAyB9B,IAAI,CAAClC,KAAL,CACvB,MAAKC,QADkB,EAEvB,MAAK2H,sBAFkB,EAGvBK,UAHuB,CAAzB;AAAA,gBAAQ3I,CAAR,eAAQA,CAAR;AAAA,gBAAWC,CAAX,eAAWA,CAAX;AAAA,gBAAcK,MAAd,eAAcA,MAAd;;AAMA,gBAAIqI,UAAJ,EAAgB;AACd,kBAAI,CAAC,MAAK3D,kBAAV,EAA8B;AAC5B,sBAAKA,kBAAL,GAA0B,IAAIhD,WAAJ,CACxBY,IADwB,EAExB,MAAKsC,UAAL,CAAgBhD,KAFQ,CAA1B;AAID;;AAEDwG,cAAAA,eAAe,GAAG,IAAlB;;AAEA,oBAAK1D,kBAAL,CAAwBtE,KAAxB,CACE,MAAKC,QADP,EAEE,MAAK2H,sBAFP,EAGE,MAAKpD,UAAL,CAAgBhD,KAHlB;;AAMA,oBAAK+C,QAAL,CAAc;AACZ2B,gBAAAA,SAAS,EAAE,IADC;AAEZD,gBAAAA,aAAa,EAAE;AACbb,kBAAAA,IAAI,EAAE9F,CADO;AAEb+F,kBAAAA,GAAG,EAAE9F,CAAC,GAAGK,MAAJ,GAAa,MAAKkF,KAAL,CAAWoD;AAFhB,iBAFH;AAMZ/B,gBAAAA,YAAY,EAAEjE,IAAI,CAAChB,iBAAL,GAAyBP,OAAzB,IAAoC;AANtC,eAAd;AAQD;AACF;AA3C0C;AAAA;AAAA;AAAA;AAAA;;AA6C3C,YAAI,CAACqH,eAAL,EAAsB;AACpB,gBAAKzD,QAAL,CAAc;AACZ2B,YAAAA,SAAS,EAAE,KADC;AAEZC,YAAAA,YAAY,EAAE;AAFF,WAAd;AAID;AACF;;AAED,YAAKC,qBAAL,GAA6B,MAAK5C,MAAL,CAAYmC,GAAZ,CAAgB,UAACzD,IAAD;AAAA,eAC3CA,IAAI,CAAChB,iBAAL,EAD2C;AAAA,OAAhB,CAA7B;AAGA,UAAQvC,QAAR,GAAqB,MAAKmG,KAA1B,CAAQnG,QAAR;AACAA,MAAAA,QAAQ,CAAC,MAAKyH,qBAAN,CAAR;AACD;;UAEOgB,qBAAqB,YAAM;AACjC,UAAQrI,cAAR,GAA2B,MAAK+F,KAAhC,CAAQ/F,cAAR;;AACA,UAAIA,cAAJ,EAAoB;AAClB,YAAMoJ,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAM;AAC5C,gBAAKnE,UAAL,GAAkB,IAAlB;AACA,gBAAKR,MAAL,GAAczE,cAAc,CAAC4G,GAAf,CACZ,UAACyC,kBAAD;AAAA,mBACE,IAAI3J,SAAJ,CACE2J,kBADF,EAEE,MAAKzE,aAFP,EAGE,MAAKkB,eAHP,EAIL,MAAKC,KAAL,CAAWnF,KAJN,EAKL,MAAKmF,KAAL,CAAWlF,MALN,CADF;AAAA,WADY,CAAd;;AAUA,gBAAK+D,aAAL;AACD,SAbD;;AAeA,YAAI5E,cAAc,CAAC+D,MAAf,KAA0B,MAAKU,MAAL,CAAYV,MAA1C,EAAkD;AAChDqF,UAAAA,+BAA+B;AAChC,SAFD,MAEO;AAAA,sDAC4BpJ,cAD5B;AAAA;;AAAA;AAAA;AAAA,kBACMsJ,kBADN;;AAEH,kBAAMC,WAAW,GAAG,MAAK9E,MAAL,CAAY+E,IAAZ,CAClB,UAACrG,IAAD;AAAA,uBAAUA,IAAI,CAAChB,iBAAL,GAAyBG,EAAzB,KAAgCgH,kBAAkB,CAAChH,EAA7D;AAAA,eADkB,CAApB;;AAGA,kBAAIiH,WAAW,IAAIA,WAAW,CAAClH,KAAZ,CAAkBiH,kBAAlB,CAAnB,EAA0D;AACxD;AACD,eAFD,MAEO;AACLF,gBAAAA,+BAA+B;AAC/B;AACD;AAVE;;AACL,mEAAiD;AAAA;;AAAA,uCAK7C;AAL6C,oCAQ7C;AAEH;AAXI;AAAA;AAAA;AAAA;AAAA;AAYN;AACF;AACF;;UAEOd,iBAAiB,YAAM;AAC7B,UAAQrD,UAAR,GAAuB,MAAKc,KAA5B,CAAQd,UAAR;;AAEA,UAAIA,UAAU,IAAIA,UAAU,KAAK,MAAKA,UAAtC,EAAkD;AAChD,cAAKA,UAAL,GAAkBA,UAAlB;;AACA,cAAKL,aAAL;AACD;AACF;;UAEOqB,WAAW,YAAM;AACvB,UAAMwD,YAAY,GAAG,MAAKhF,MAAL,CAAYpB,SAAZ,CACnB,UAACb,KAAD;AAAA,eAAWA,KAAK,CAACL,iBAAN,GAA0BG,EAA1B,KAAiC,MAAK2C,UAAjD;AAAA,OADmB,CAArB;;AAGA,UAAIwE,YAAY,IAAI,CAApB,EAAuB;AACrB,cAAKhF,MAAL,CAAYiB,MAAZ,CAAmB+D,YAAnB,EAAiC,CAAjC;;AACA,cAAK7E,aAAL;AACD;AACF;;UAEM8E,aAAa,YAAM;AAC1B,YAAKlE,QAAL,CAAc;AACbgB,QAAAA,MAAM,EAAG,CAAC,MAAKS,KAAL,CAAWT;AADR,OAAd;AAGA;;UAEQ0B,eAAe,YAAM;AAC3B,UAAMH,aAAa,GAAG,MAAKR,SAAL,CAAeS,OAArC;AACA,UAAMC,kBAAkB,GAAG,MAAKP,cAAL,CAAoBM,OAA/C;;AACA,UAAID,aAAa,IAAIE,kBAArB,EAAyC;AACvC,YAAM0B,eAAe,GAAG5B,aAAa,CAACI,UAAd,CAAyB,IAAzB,CAAxB;AACA,YAAMyB,oBAAoB,GAAG3B,kBAAkB,CAACE,UAAnB,CAA8B,IAA9B,CAA7B;;AACA,YAAIwB,eAAe,IAAIC,oBAAvB,EAA6C;AAC3CD,UAAAA,eAAe,CAAClH,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB;AACAmH,UAAAA,oBAAoB,CAACnH,KAArB,CAA2B,CAA3B,EAA8B,CAA9B;AACD;AACF;AACF;;UAEOgE,uBAAuB,UAAC7E,OAAD,EAAqB;AAClD,UAAMiI,kBAAkB,GAAG,MAAKpF,MAAL,CAAYpB,SAAZ,CACzB,UAACF,IAAD;AAAA,eAAUA,IAAI,CAAChB,iBAAL,GAAyBG,EAAzB,KAAgC,MAAK2C,UAA/C;AAAA,OADyB,CAA3B;;AAGA,YAAKR,MAAL,CAAYoF,kBAAZ,EAAgCzH,UAAhC,CAA2CR,OAA3C;;AACA,YAAK4D,QAAL,CAAc;AACf4B,QAAAA,YAAY,EAAExF,OADC;AAEf4E,QAAAA,MAAM,EAAG;AAFM,OAAd;AAID;;UAEOkC,aAAa,YAAM;AACzB,UAAI,MAAKf,aAAL,IAAsB,MAAKD,cAAL,CAAoBM,OAA9C,EAAuD;AACrD,cAAKL,aAAL,CAAmBqB,SAAnB,CACE,CADF,EAEE,CAFF,EAGE,MAAKtB,cAAL,CAAoBM,OAApB,CAA4BpH,KAH9B,EAIE,MAAK8G,cAAL,CAAoBM,OAApB,CAA4BnH,MAJ9B;AAMD;AACF;;UAEOuH,gBAAgB,YAAM;AAC5B,YAAKM,UAAL;;AACA,UAAI,MAAKf,aAAL,IAAsB,MAAKD,cAAL,CAAoBM,OAA9C,EAAuD;AACrD,YAAI,MAAKJ,mBAAT,EAA8B;AAC5B,kCAAoC,MAAKnC,UAAzC;AAAA,cAAQqB,OAAR,qBAAQA,OAAR;AAAA,cAAiBC,OAAjB,qBAAiBA,OAAjB;AAAA,cAA0BtE,KAA1B,qBAA0BA,KAA1B;;AACA,gBAAKkF,aAAL,CAAmBmC,SAAnB,CACE,MAAKlC,mBADP,EAEEd,OAFF,EAGEC,OAHF,EAIE,MAAKa,mBAAL,CAAyBhH,KAAzB,GAAiC6B,KAJnC,EAKE,MAAKmF,mBAAL,CAAyB/G,MAAzB,GAAkC4B,KALpC;AAOD,SATD,MASO;AACL,cAAMsH,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAF,UAAAA,aAAa,CAACG,gBAAd,CAA+B,MAA/B,EAAuC,YAAM;AAC3C,kBAAKtC,mBAAL,GAA2BmC,aAA3B;AACA,gBAAQnJ,KAAR,GAA0BmJ,aAA1B,CAAQnJ,KAAR;AAAA,gBAAeC,MAAf,GAA0BkJ,aAA1B,CAAelJ,MAAf;AACA,gBAAMsJ,cAAc,GAAGtJ,MAAM,GAAGD,KAAhC;AACA,+BAAqD,MAAKmF,KAA1D;AAAA,gBAAeqE,WAAf,gBAAQxJ,KAAR;AAAA,gBAAoCyJ,YAApC,gBAA4BxJ,MAA5B;AACA,gBAAMyJ,eAAe,GAAGD,YAAY,GAAGD,WAAvC;;AACA,gBAAI,CAACG,KAAK,CAACJ,cAAD,CAAN,IAA0B,CAACI,KAAK,CAACD,eAAD,CAApC,EAAuD;AACrD,kBAAIH,cAAc,GAAGG,eAArB,EAAsC;AACpC,oBAAM7H,MAAK,GAAG2H,WAAW,GAAGxJ,KAA5B;;AACA,sBAAK6E,UAAL,GAAkB;AAChBqB,kBAAAA,OAAO,EAAE,CADO;AAEhBC,kBAAAA,OAAO,EAAE,CAACsD,YAAY,GAAG5H,MAAK,GAAG5B,MAAxB,IAAkC,CAF3B;AAGhB4B,kBAAAA,KAAK,EAALA;AAHgB,iBAAlB;AAKD,eAPD,MAOO;AACL,oBAAMA,OAAK,GAAG4H,YAAY,GAAGxJ,MAA7B;;AACA,sBAAK4E,UAAL,GAAkB;AAChBqB,kBAAAA,OAAO,EAAE,CAACsD,WAAW,GAAG3H,OAAK,GAAG7B,KAAvB,IAAgC,CADzB;AAEhBmG,kBAAAA,OAAO,EAAE,CAFO;AAGhBtE,kBAAAA,KAAK,EAALA;AAHgB,iBAAlB;AAKD;AACF;;AACD,kBAAK2F,aAAL;;AACA,kBAAKxD,aAAL;AACD,WAzBD;AA0BAmF,UAAAA,aAAa,CAACS,GAAd,GAAoB,EAApB;AACAT,UAAAA,aAAa,CAACpB,GAAd,GAAoB,MAAK5C,KAAL,CAAW0C,KAA/B;AACD;AACF;AACF;;UAEOnE,cAAoD,UAACmG,KAAD,EAAW;AACrE,+BAA6BA,KAAK,CAACC,WAAnC;AAAA,UAAQjK,OAAR,sBAAQA,OAAR;AAAA,UAAiBC,OAAjB,sBAAiBA,OAAjB;;AACA,kCAAiC,MAAKkI,sBAAL,CAC/BnI,OAD+B,EAE/BC,OAF+B,CAAjC;AAAA,UAAQN,SAAR,yBAAQA,SAAR;AAAA,UAAmBC,SAAnB,yBAAmBA,SAAnB;;AAIA,YAAKwH,sBAAL,CAA4BvD,WAA5B,CAAwClE,SAAxC,EAAmDC,SAAnD;AACD;;UAEOmE,cAAoD,UAACiG,KAAD,EAAW;AACrE,gCAA6BA,KAAK,CAACC,WAAnC;AAAA,UAAQjK,OAAR,uBAAQA,OAAR;AAAA,UAAiBC,OAAjB,uBAAiBA,OAAjB;;AACA,mCAAiC,MAAKkI,sBAAL,CAC/BnI,OAD+B,EAE/BC,OAF+B,CAAjC;AAAA,UAAQN,SAAR,0BAAQA,SAAR;AAAA,UAAmBC,SAAnB,0BAAmBA,SAAnB;;AAIA,YAAKwH,sBAAL,CAA4BrD,WAA5B,CAAwCpE,SAAxC,EAAmDC,SAAnD;AACD;;UAEOsE,YAAkD,YAAM;AAC9D,YAAKkD,sBAAL,CAA4BlD,SAA5B;AACD;;UAEOS,eAAqD,YAAM;AACjE,YAAKyC,sBAAL,CAA4BzC,YAA5B;AACD;;UAEOuF,UAAU,UAACF,KAAD,EAAgD;AAChE;AACA,iCAAkDA,KAAK,CAACG,aAAxD;AAAA,UAAQC,YAAR,wBAAQA,YAAR;AAAA,UAAsBC,SAAtB,wBAAsBA,SAAtB;AAAA,UAAiCC,YAAjC,wBAAiCA,YAAjC;;AACA,UAAIF,YAAY,GAAGC,SAAf,GAA2BL,KAAK,CAACO,MAAjC,GAA0CD,YAA9C,EAA4D;AAC1D;AACAN,QAAAA,KAAK,CAACG,aAAN,CAAoBE,SAApB,GAAgCC,YAAhC;AACD,OAHD,MAGO,IAAID,SAAS,GAAGL,KAAK,CAACO,MAAlB,GAA2B,CAA/B,EAAkC;AACvC;AACAP,QAAAA,KAAK,CAACG,aAAN,CAAoBE,SAApB,GAAgC,CAAhC;AACD;;AAED,UAAeG,QAAf,GAA4B,MAAKxF,UAAjC,CAAQhD,KAAR;AACA,YAAKgD,UAAL,CAAgBhD,KAAhB,IAAyBgI,KAAK,CAACO,MAAN,GAAe,MAAKjF,KAAL,CAAWmF,WAAnD;;AACA,UAAI,MAAKzF,UAAL,CAAgBhD,KAAhB,GAAwB,EAA5B,EAAgC;AAC9B,cAAKgD,UAAL,CAAgBhD,KAAhB,GAAwB,EAAxB;AACD;;AACD,UAAI,MAAKgD,UAAL,CAAgBhD,KAAhB,GAAwB,GAA5B,EAAiC;AAC/B,cAAKgD,UAAL,CAAgBhD,KAAhB,GAAwB,GAAxB;AACD;;AAED,8BAAoC,MAAKgD,UAAzC;AAAA,UAAQqB,OAAR,qBAAQA,OAAR;AAAA,UAAiBC,OAAjB,qBAAiBA,OAAjB;AAAA,UAA0BtE,KAA1B,qBAA0BA,KAA1B;AACA,gCAA6BgI,KAAK,CAACC,WAAnC;AAAA,UAAQjK,OAAR,uBAAQA,OAAR;AAAA,UAAiBC,OAAjB,uBAAiBA,OAAjB;AACA,YAAK+E,UAAL,CAAgBqB,OAAhB,GACErG,OAAO,GAAI,CAACA,OAAO,GAAGqG,OAAX,IAAsBmE,QAAvB,GAAmCxI,KAD/C;AAEA,YAAKgD,UAAL,CAAgBsB,OAAhB,GACErG,OAAO,GAAI,CAACA,OAAO,GAAGqG,OAAX,IAAsBkE,QAAvB,GAAmCxI,KAD/C;;AAGA,YAAK+C,QAAL,CAAc;AAAE2F,QAAAA,UAAU,EAAE,MAAK1F;AAAnB,OAAd;;AAEA2F,MAAAA,qBAAqB,CAAC,YAAM;AAC1B,cAAKxG,aAAL;;AACA,cAAKwD,aAAL;AACD,OAHoB,CAArB;AAID;;;;;;;SArZD,eAAiB;AACf,aAAO,KAAKd,mBAAZ;AACD;SARD,aAAetB,KAAf,EAAqC;AACnC,UAAQqF,QAAR,GAAqB,KAAKtF,KAA1B,CAAQsF,QAAR;AACA,WAAK/D,mBAAL,GAA2BtB,KAA3B;AACAqF,MAAAA,QAAQ,CAACrF,KAAD,CAAR;AACD;;;SAMD,eAAsB;AACpB,aAAO,KAAKD,KAAL,CAAWD,eAAlB;AACD;;;SAED,eAA4B;AAC1B,aAAO,KAAKC,KAAL,CAAWZ,qBAAlB;AACD;;;WAuED,kBAAgB;AACd,yBAAwC,KAAKY,KAA7C;AAAA,UAAQnF,KAAR,gBAAQA,KAAR;AAAA,UAAeC,MAAf,gBAAeA,MAAf;AAAA,UAAuByK,YAAvB,gBAAuBA,YAAvB;AACA,wBAAmD,KAAKrE,KAAxD;AAAA,UAAQE,SAAR,eAAQA,SAAR;AAAA,UAAmBD,aAAnB,eAAmBA,aAAnB;AAAA,UAAkCE,YAAlC,eAAkCA,YAAlC;AACA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AACE,QAAA,KAAK,EAAE;AAAExG,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,MAAM,EAANA;AAAT,SADT;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,GAAG,EAAE,KAAK6G,cAHZ;AAIE,QAAA,KAAK,EAAE9G,KAAK,GAAG,CAJjB;AAKE,QAAA,MAAM,EAAEC,MAAM,GAAG;AALnB,QADF,eAQE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,MAAM,EAANA;AAAT,SAFT;AAGE,QAAA,GAAG,EAAE,KAAK0G,SAHZ;AAIE,QAAA,KAAK,EAAE3G,KAAK,GAAG,CAJjB;AAKE,QAAA,MAAM,EAAEC,MAAM,GAAG,CALnB;AAME,QAAA,WAAW,EAAE,KAAKyD,WANpB;AAOE,QAAA,WAAW,EAAE,KAAKE,WAPpB;AAQE,QAAA,SAAS,EAAE,KAAKG,SARlB;AASE,QAAA,YAAY,EAAE,KAAKS,YATrB;AAUE,QAAA,OAAO,EAAE,KAAKuF;AAVhB,QARF,EAoBGxD,SAAS,iBACR;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,KAAK,EAAED;AAA1C,SACGoE,YAAY,CACXlE,YADW,EAEX,KAAKX,oBAFM,EAGX,KAAKR,QAHM,CADf,CArBJ,EA+BDkB,SAAS,iBAER,oBAAC,sBAAD;AAEC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,YAFnB;AAGC,QAAA,QAAQ,EAAI,KAAKnB,QAHlB;AAIC,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWC,aAAX,CAAyBb,IAJlC;AAKC,QAAA,GAAG,EAAI,KAAKY,KAAL,CAAWC,aAAX,CAAyBZ,GALjC;AAMC,QAAA,MAAM,EAAI,KAAKoD,UANhB;AAOC,QAAA,MAAM,EAAI,KAAKzC,KAAL,CAAWT,MAPtB;AAQC,QAAA,oBAAoB,EAAI,KAAKC,oBAR9B;AASC,QAAA,eAAe,EAAI,KAAKV,KAAL,CAAWW;AAT/B,QAjCA,CADF;AAqDD;;;;EA7KiDc,KAAK,CAAC+D;;AAArCvE,uBAGLwE,eAAe;AAC3BrC,EAAAA,eAAe,EAAE,EADU;AAE3B+B,EAAAA,WAAW,EAAE,MAFc;AAG3BpF,EAAAA,eAAe,EAAEjH,iBAHU;AAI3ByM,EAAAA,YAAY,EAAE,sBACZtF,KADY,EAEZpG,QAFY,EAGZqG,QAHY;AAAA,wBAKZ,oBAAC,mBAAD;AACE,MAAA,KAAK,EAAED,KADT;AAEE,MAAA,QAAQ,EAAEpG,QAFZ;AAGE,MAAA,QAAQ,EAAEqG;AAHZ,MALY;AAAA;AAJa;;;;"}